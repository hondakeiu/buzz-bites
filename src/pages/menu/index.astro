---
import Pageheader from "../../components/Pageheader.astro";
import Partition from "../../components/Partition.astro";
import { data } from "../../contents/meta/data";
import { foods } from "../../features/food/data";
import { menus } from "../../features/menu/data";
import Layout from "../../layouts/Layout.astro";
import { formatDate, getWeekName, getYoubi } from "../../scripts/utils/calendar";
import { getFoodStatus, getRecipeStatus, getStatusHeartColor } from "../../scripts/utils/status";
import { checkNewFood, checkNewRecipe } from "../../scripts/utils/tag";
---

<Layout meta={data["menu"]}>
  <div class="menu">
    <Pageheader text="献立" />
    <div class="menu__body">
      <div class="inner inner--m">
        {
          menus.map((group) => {
            const today = group.date;
            const week = getWeekName(today);
            const id = "date-" + formatDate(today, "");
            return (
              <section id={id} class="day">
                <h2 class="day__heading">
                  <span class="text text--en day__heading__week">{week}</span>
                  <span class="text text--en day__heading__date">
                    {formatDate(today, "/")}
                    <span class="text text--jp">({getYoubi(today)})</span>
                  </span>
                </h2>
                <div class="day__body">
                  {group.meals.map((meal) => {
                    return (
                      <div class="ygroup meal">
                        <div class="ygroup__heading meal__heading">
                          <h3 class="text text--jp">{meal.name}</h3>
                          {meal.total && <p class="text text--en">{meal.total}</p>}
                        </div>
                        <div class="ygroup__body meal__body">
                          {meal.items.map((group) => {
                            return (
                              <>
                                <ul>
                                  {group.map((item) => {
                                    const status = item.recipe ? getRecipeStatus(item.name) : getFoodStatus(item.name);
                                    const color = getStatusHeartColor(status);
                                    const tag = item.recipe ? checkNewRecipe(item.name, today) : checkNewFood(item.name, today);
                                    return (
                                      <li>
                                        <div class="yitem item">
                                          <span class:list={["heart heart--f", `heart--${color}f`, "item__status"]} />
                                          <p class="text text--jp item__name">
                                            {item.name}
                                            {tag && <span class="text text--jp item__tag">{tag}</span>}
                                          </p>
                                          <p class="text text--en item__amount">
                                            {item.amount}
                                            {item.unit && <span class="text text--jp">{item.unit}</span>}
                                          </p>
                                        </div>
                                      </li>
                                    );
                                  })}
                                </ul>
                                {group !== meal.items[meal.items.length - 1] && <Partition />}
                              </>
                            );
                          })}
                        </div>
                      </div>
                    );
                  })}
                  {group.memo && (
                    <div class="ygroup meal">
                      <div class="ygroup__heading meal__heading">
                        <h3 class="text text--jp">メモ</h3>
                      </div>
                      <div class="ygroup__body meal__body">
                        <ul>
                          {group.memo.map((memo) => (
                            <li>
                              <div class="yitem">
                                <span class="heart heart--f heart--rf" />
                                <p class="text">{memo}</p>
                              </div>
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  )}
                </div>
              </section>
            );
          })
        }
      </div>
    </div>
  </div>
</Layout>

<style lang="scss">
  .menu {
    padding: calc(6rem + 2rem) 0 calc(6rem + 4rem);
    &__body {
      .inner {
        display: flex;
        flex-direction: column;
        row-gap: 2rem;
      }
      .day {
        padding-top: 3rem;
        &__heading {
          display: flex;
          justify-content: center;
          align-items: center;
          column-gap: 1rem;
          &__week {
            background: var(--gray);
            border-radius: 9999px;
            font-size: 1.2rem;
            letter-spacing: 0.08em;
            padding: 0.3rem 1rem;
          }
          &__date {
            display: flex;
            font-size: 1.4rem;
            span {
              margin-left: 0.3rem;
            }
          }
        }
        &__body {
          margin-top: 3rem;
          display: flex;
          flex-direction: column;
          row-gap: 2rem;
          .meal {
            &__heading {
              p {
                font-size: 1.2rem;
              }
            }
            &__body {
              .item {
                &__tag {
                  display: inline-flex;
                  justify-content: center;
                  align-items: center;
                  border-radius: 9999px;
                  border: 0.1rem solid var(--black);
                  font-size: 1rem;
                  margin-left: 0.2rem;
                  vertical-align: 0.15rem;
                  padding: 0.15rem 0.5rem;
                }
                &__amount {
                  display: flex;
                  font-size: 1.2rem;
                  span {
                    margin-top: 0.1rem;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
</style>
